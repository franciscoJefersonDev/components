var d=Object.defineProperty;var p=(n,t,e)=>t in n?d(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var r=(n,t,e)=>(p(n,typeof t!="symbol"?t+"":t,e),e);const u=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))i(a);new MutationObserver(a=>{for(const o of a)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function e(a){const o={};return a.integrity&&(o.integrity=a.integrity),a.referrerpolicy&&(o.referrerPolicy=a.referrerpolicy),a.crossorigin==="use-credentials"?o.credentials="include":a.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(a){if(a.ep)return;a.ep=!0;const o=e(a);fetch(a.href,o)}};u();class m{constructor(t){r(this,"rippleTimeout");r(this,"rippleEnd");r(this,"els");r(this,"elementData");this.rippleEnd=!1,this.els=t,this.elementData={size:0,color:"",transition:200,halfWidth:0,halfHeight:0,touchData:{top:0,left:0,right:0,bottom:0}},this.els.forEach(e=>{e.addEventListener("pointerdown",i=>{this.start(i)}),e.addEventListener("mouseleave",i=>{this.end(i.target)}),e.addEventListener("mouseup",i=>{this.end(i.target)}),e.addEventListener("touchleave",i=>{this.end(i.target)}),e.addEventListener("touchend",i=>{this.end(i.target)})})}start(t){this.setElementSize(t.target),this.setColorAndTransition(t.target),this.elementData.halfWidth=t.target.offsetWidth/2,this.elementData.halfHeight=t.target.offsetHeight/2,this.rippleTimeout=setTimeout(()=>{this.rippleEnd=!0},this.elementData.transition),this.create(t)}setElementSize(t){const e=Number(window.getComputedStyle(t).getPropertyValue("width").replace(/px/gi,"")),i=Number(window.getComputedStyle(t).getPropertyValue("height").replace(/px/gi,""));this.elementData.size=Math.sqrt(Math.pow(e,2)+Math.pow(i,2))/4}setColorAndTransition(t){this.elementData.color=window.getComputedStyle(t).getPropertyValue("--rp-color"),this.elementData.transition=Number(window.getComputedStyle(t).getPropertyValue("--rp-transition"))}create(t){const e=document.createElement("span");e.classList.add("ripple"),t.target.appendChild(e),this.setTouchData(t),e.style.top=`${this.elementData.touchData.top-this.elementData.size/2}px`,e.style.left=`${this.elementData.touchData.left-this.elementData.size/2}px`,e.style.willChange="transform border-radius width height top left",e.style.backgroundColor=this.elementData.color,e.style.transform=`scale(${this.getScaleRipple()/(this.elementData.size/2)})`,e.style.width=`${this.elementData.size}px`,e.style.height=`${this.elementData.size}px`,e.style.borderRadius="100%",e.style.position="absolute",e.style.pointerEvents="none",e.style.opacity="1",e.style.transition=`opacity linear ${this.elementData.transition}ms, transform linear ${this.elementData.transition}ms`}setTouchData(t){this.elementData.touchData.top=Number(Math.abs(t.target.getBoundingClientRect().top-t.clientY)),this.elementData.touchData.left=Number(Math.abs(t.target.getBoundingClientRect().left-t.clientX)),this.elementData.touchData.right=Number(Math.abs(t.target.getBoundingClientRect().right-t.clientX)),this.elementData.touchData.bottom=Number(Math.abs(t.target.getBoundingClientRect().bottom-t.clientY))}getFormula(){return{a:Math.sqrt(this.elementData.touchData.bottom**2+this.elementData.touchData.right**2),b:Math.sqrt(this.elementData.touchData.bottom**2+this.elementData.touchData.left**2),c:Math.sqrt(this.elementData.touchData.top**2+this.elementData.touchData.right**2),d:Math.sqrt(this.elementData.touchData.top**2+this.elementData.touchData.left**2)}}getScaleRipple(){return this.elementData.touchData.top<=this.elementData.halfHeight&&this.elementData.touchData.left<=this.elementData.halfWidth?this.getFormula().a:this.elementData.touchData.top<this.elementData.halfHeight&&this.elementData.touchData.left>this.elementData.halfWidth?this.getFormula().b:this.elementData.touchData.top>this.elementData.halfHeight&&this.elementData.touchData.left<this.elementData.halfWidth?this.getFormula().c:this.elementData.touchData.top>this.elementData.halfHeight&&this.elementData.touchData.left>this.elementData.halfWidth?this.getFormula().d:this.getFormula().d}end(t){t.querySelectorAll(".ripple").forEach(i=>{this.rippleEnd?(i.style.opacity="0",i.style.transition=`opacity linear ${this.elementData.transition}ms`,i.addEventListener("transitionend",()=>{i.remove()})):setTimeout(()=>{i.style.opacity="0",i.style.transition=`opacity linear ${this.elementData.transition}ms`,i.addEventListener("transitionend",()=>{i.remove()})},this.elementData.transition),clearTimeout(this.rippleTimeout),this.rippleEnd=!1})}}document.addEventListener("DOMContentLoaded",()=>{const n=document.querySelectorAll(".ripples");new m(n)});const g=document.querySelector("#app");g.innerHTML=`
  <button class="turn-hidden wk-btn ripples">
    Hidden
    <label class="wk-switch">
      <input type="checkbox" class="wk-switch__input input-turn-hidden" checked>
    <span class="wk-switch__slider"></span>
  </label>
  </button>
  <button class="wk-btn ripples btn-demo-rp">
    <ion-icon name="add"></ion-icon>
  </button>
`;const b=document.querySelector(".turn-hidden"),l=document.querySelector(".input-turn-hidden"),c=document.querySelector(".btn-demo-rp");b.addEventListener("click",()=>{l.checked=!l.checked,h()});const h=()=>{l.checked?c.style.overflow="hidden":c.style.overflow="initial"};h();
